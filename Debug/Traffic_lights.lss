
Traffic_lights.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000023c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  0000023c  000002b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000090  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000001b  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000039c  00000000  00000000  00000a5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000161  00000000  00000000  00000df7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003da  00000000  00000000  00000f58  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000020  00000000  00000000  00001334  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000000f6  00000000  00000000  00001354  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000046c  00000000  00000000  0000144a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000038  00000000  00000000  000018b6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  000018ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e3       	ldi	r30, 0x3C	; 60
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 37       	cpi	r26, 0x74	; 116
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 1c 01 	jmp	0x238	; 0x238 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include<avr/io.h>
#include<util/delay.h>
void main()
{
  82:	2f 92       	push	r2
  84:	3f 92       	push	r3
  86:	4f 92       	push	r4
  88:	5f 92       	push	r5
  8a:	6f 92       	push	r6
  8c:	7f 92       	push	r7
  8e:	8f 92       	push	r8
  90:	9f 92       	push	r9
  92:	af 92       	push	r10
  94:	bf 92       	push	r11
  96:	cf 92       	push	r12
  98:	df 92       	push	r13
  9a:	ef 92       	push	r14
  9c:	ff 92       	push	r15
  9e:	0f 93       	push	r16
  a0:	1f 93       	push	r17
  a2:	df 93       	push	r29
  a4:	cf 93       	push	r28
  a6:	cd b7       	in	r28, 0x3d	; 61
  a8:	de b7       	in	r29, 0x3e	; 62
  aa:	66 97       	sbiw	r28, 0x16	; 22
  ac:	0f b6       	in	r0, 0x3f	; 63
  ae:	f8 94       	cli
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	cd bf       	out	0x3d, r28	; 61
DDRA=0b11111111;
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	8a bb       	out	0x1a, r24	; 26
DDRB=0b11111111;
  ba:	87 bb       	out	0x17, r24	; 23
DDRC=0b11111111;
  bc:	84 bb       	out	0x14, r24	; 20
DDRD=0b11111111;
  be:	81 bb       	out	0x11, r24	; 17
while(1)
{int a[10]={
  c0:	ae 01       	movw	r20, r28
  c2:	4f 5f       	subi	r20, 0xFF	; 255
  c4:	5f 4f       	sbci	r21, 0xFF	; 255
  c6:	0f 2e       	mov	r0, r31
  c8:	f0 e6       	ldi	r31, 0x60	; 96
  ca:	6f 2e       	mov	r6, r31
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	7f 2e       	mov	r7, r31
  d0:	f0 2d       	mov	r31, r0
d[1]={0b01000000};

   for(i=5;i>=0;i--)
      {for(j=9;j>=0;j--)
	     {for(l=0;l<6;l++)
{PORTC=0b11110111;
  d2:	0f 2e       	mov	r0, r31
  d4:	f7 ef       	ldi	r31, 0xF7	; 247
  d6:	ff 2e       	mov	r15, r31
  d8:	f0 2d       	mov	r31, r0
 PORTB=a[j];
_delay_ms(45);
PORTC=0b11111011;
  da:	0b ef       	ldi	r16, 0xFB	; 251
PORTB=a[i];
_delay_ms(50);
PORTD=0b11111110;
  dc:	1e ef       	ldi	r17, 0xFE	; 254
#include<avr/io.h>
#include<util/delay.h>
void main()
{
  de:	0f 2e       	mov	r0, r31
  e0:	f3 e1       	ldi	r31, 0x13	; 19
  e2:	af 2e       	mov	r10, r31
  e4:	bb 24       	eor	r11, r11
  e6:	f0 2d       	mov	r31, r0
  e8:	ac 0e       	add	r10, r28
  ea:	bd 1e       	adc	r11, r29
_delay_ms(50);
PORTD=0b11111110;
}
}
}
PORTD=0b11111101;
  ec:	0f 2e       	mov	r0, r31
  ee:	fd ef       	ldi	r31, 0xFD	; 253
  f0:	8f 2e       	mov	r8, r31
  f2:	f0 2d       	mov	r31, r0
   {for(k=3;k>=0;k--)
      {for(l=9;l>=1;l--) 
        {for(m=0;m<6;m++)
	{
PORTC=0b11111110;
PORTA=b[i];
  f4:	0f 2e       	mov	r0, r31
  f6:	f0 e7       	ldi	r31, 0x70	; 112
  f8:	df 2e       	mov	r13, r31
  fa:	f0 2d       	mov	r31, r0
PORTB=0b00000000;
_delay_ms(12);
PORTC=0b11111101;
  fc:	e8 2c       	mov	r14, r8
#include<avr/io.h>
#include<util/delay.h>
void main()
{
  fe:	c5 01       	movw	r24, r10
 100:	ca 2c       	mov	r12, r10
 102:	99 2e       	mov	r9, r25
DDRA=0b11111111;
DDRB=0b11111111;
DDRC=0b11111111;
DDRD=0b11111111;
while(1)
{int a[10]={
 104:	da 01       	movw	r26, r20
 106:	f3 01       	movw	r30, r6
 108:	84 e1       	ldi	r24, 0x14	; 20
 10a:	01 90       	ld	r0, Z+
 10c:	0d 92       	st	X+, r0
 10e:	81 50       	subi	r24, 0x01	; 1
 110:	e1 f7       	brne	.-8      	; 0x10a <main+0x88>
 112:	0f 2e       	mov	r0, r31
 114:	fb e0       	ldi	r31, 0x0B	; 11
 116:	2f 2e       	mov	r2, r31
 118:	33 24       	eor	r3, r3
 11a:	f0 2d       	mov	r31, r0
 11c:	2c 0e       	add	r2, r28
 11e:	3d 1e       	adc	r3, r29
#include<avr/io.h>
#include<util/delay.h>
void main()
 120:	9e 01       	movw	r18, r28
 122:	21 50       	subi	r18, 0x01	; 1
 124:	30 40       	sbci	r19, 0x00	; 0
{
 126:	66 e0       	ldi	r22, 0x06	; 6
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	23 c0       	rjmp	.+70     	; 0x172 <main+0xf0>
d[1]={0b01000000};

   for(i=5;i>=0;i--)
      {for(j=9;j>=0;j--)
	     {for(l=0;l<6;l++)
{PORTC=0b11110111;
 12c:	f5 ba       	out	0x15, r15	; 21
 PORTB=a[j];
 12e:	50 80       	ld	r5, Z
 130:	58 ba       	out	0x18, r5	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 132:	a1 ef       	ldi	r26, 0xF1	; 241
 134:	bb e2       	ldi	r27, 0x2B	; 43
 136:	11 97       	sbiw	r26, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <main+0xb4>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0xba>
 13c:	00 00       	nop
_delay_ms(45);
PORTC=0b11111011;
 13e:	05 bb       	out	0x15, r16	; 21
PORTB=a[i];
 140:	d1 01       	movw	r26, r2
 142:	5c 90       	ld	r5, X
 144:	58 ba       	out	0x18, r5	; 24
 146:	a3 ed       	ldi	r26, 0xD3	; 211
 148:	b0 e3       	ldi	r27, 0x30	; 48
 14a:	11 97       	sbiw	r26, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <main+0xc8>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0xce>
 150:	00 00       	nop
_delay_ms(50);
PORTD=0b11111110;
 152:	12 bb       	out	0x12, r17	; 18
 154:	01 97       	sbiw	r24, 0x01	; 1
c[1]={0b01000001},
d[1]={0b01000000};

   for(i=5;i>=0;i--)
      {for(j=9;j>=0;j--)
	     {for(l=0;l<6;l++)
 156:	51 f7       	brne	.-44     	; 0x12c <main+0xaa>
 158:	32 97       	sbiw	r30, 0x02	; 2
b[1]={0b01110000},
c[1]={0b01000001},
d[1]={0b01000000};

   for(i=5;i>=0;i--)
      {for(j=9;j>=0;j--)
 15a:	e2 17       	cp	r30, r18
 15c:	f3 07       	cpc	r31, r19
 15e:	11 f0       	breq	.+4      	; 0x164 <main+0xe2>
#include<avr/io.h>
#include<util/delay.h>
void main()
{
 160:	cb 01       	movw	r24, r22
 162:	e4 cf       	rjmp	.-56     	; 0x12c <main+0xaa>
b[1]={0b01110000},
c[1]={0b01000001},
d[1]={0b01000000};

   for(i=5;i>=0;i--)
      {for(j=9;j>=0;j--)
 164:	8e ef       	ldi	r24, 0xFE	; 254
 166:	9f ef       	ldi	r25, 0xFF	; 255
 168:	28 0e       	add	r2, r24
 16a:	39 1e       	adc	r3, r25
},i,j,k,l,p,m,
b[1]={0b01110000},
c[1]={0b01000001},
d[1]={0b01000000};

   for(i=5;i>=0;i--)
 16c:	22 16       	cp	r2, r18
 16e:	33 06       	cpc	r3, r19
 170:	11 f0       	breq	.+4      	; 0x176 <main+0xf4>
#include<avr/io.h>
#include<util/delay.h>
void main()
{
 172:	f5 01       	movw	r30, r10
 174:	f5 cf       	rjmp	.-22     	; 0x160 <main+0xde>
_delay_ms(50);
PORTD=0b11111110;
}
}
}
PORTD=0b11111101;
 176:	82 ba       	out	0x12, r8	; 18
 178:	8f e3       	ldi	r24, 0x3F	; 63
 17a:	9d e0       	ldi	r25, 0x0D	; 13
 17c:	a3 e0       	ldi	r26, 0x03	; 3
 17e:	81 50       	subi	r24, 0x01	; 1
 180:	90 40       	sbci	r25, 0x00	; 0
 182:	a0 40       	sbci	r26, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <main+0xfc>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0x106>
 188:	00 00       	nop
_delay_ms(1000);
PORTD=0b11111100;
 18a:	8c ef       	ldi	r24, 0xFC	; 252
 18c:	82 bb       	out	0x12, r24	; 18
 18e:	de 01       	movw	r26, r28
 190:	17 96       	adiw	r26, 0x07	; 7
 192:	be 8b       	std	Y+22, r27	; 0x16
 194:	ad 8b       	std	Y+21, r26	; 0x15
#include<avr/io.h>
#include<util/delay.h>
void main()
{
 196:	66 e0       	ldi	r22, 0x06	; 6
 198:	70 e0       	ldi	r23, 0x00	; 0
PORTC=0b11111110;
PORTA=b[i];
PORTB=0b00000000;
_delay_ms(12);
PORTC=0b11111101;
PORTA=c[j];
 19a:	0f 2e       	mov	r0, r31
 19c:	f1 e4       	ldi	r31, 0x41	; 65
 19e:	4f 2e       	mov	r4, r31
 1a0:	f0 2d       	mov	r31, r0
PORTB=0b01000000;
 1a2:	55 24       	eor	r5, r5
 1a4:	68 94       	set
 1a6:	56 f8       	bld	r5, 6
 1a8:	37 c0       	rjmp	.+110    	; 0x218 <main+0x196>
 {for(j=0;j<1;j++)
   {for(k=3;k>=0;k--)
      {for(l=9;l>=1;l--) 
        {for(m=0;m<6;m++)
	{
PORTC=0b11111110;
 1aa:	15 bb       	out	0x15, r17	; 21
PORTA=b[i];
 1ac:	db ba       	out	0x1b, r13	; 27
PORTB=0b00000000;
 1ae:	18 ba       	out	0x18, r1	; 24
 1b0:	a7 eb       	ldi	r26, 0xB7	; 183
 1b2:	bb e0       	ldi	r27, 0x0B	; 11
 1b4:	11 97       	sbiw	r26, 0x01	; 1
 1b6:	f1 f7       	brne	.-4      	; 0x1b4 <main+0x132>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x138>
 1ba:	00 00       	nop
_delay_ms(12);
PORTC=0b11111101;
 1bc:	e5 ba       	out	0x15, r14	; 21
PORTA=c[j];
 1be:	4b ba       	out	0x1b, r4	; 27
PORTB=0b01000000;
 1c0:	58 ba       	out	0x18, r5	; 24
 1c2:	a7 eb       	ldi	r26, 0xB7	; 183
 1c4:	bb e0       	ldi	r27, 0x0B	; 11
 1c6:	11 97       	sbiw	r26, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <main+0x144>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x14a>
 1cc:	00 00       	nop
_delay_ms(12);
PORTC=0b11111011;
 1ce:	05 bb       	out	0x15, r16	; 21
PORTA=0b00000000;
 1d0:	1b ba       	out	0x1b, r1	; 27
PORTB=a[k];
 1d2:	ad 89       	ldd	r26, Y+21	; 0x15
 1d4:	be 89       	ldd	r27, Y+22	; 0x16
 1d6:	3c 90       	ld	r3, X
 1d8:	38 ba       	out	0x18, r3	; 24
 1da:	a7 eb       	ldi	r26, 0xB7	; 183
 1dc:	bb e0       	ldi	r27, 0x0B	; 11
 1de:	11 97       	sbiw	r26, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <main+0x15c>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x162>
 1e4:	00 00       	nop
_delay_ms(12);
PORTC=0b11110111;
 1e6:	f5 ba       	out	0x15, r15	; 21
PORTB=a[l];
 1e8:	30 80       	ld	r3, Z
 1ea:	38 ba       	out	0x18, r3	; 24
 1ec:	a3 e9       	ldi	r26, 0x93	; 147
 1ee:	b1 e1       	ldi	r27, 0x11	; 17
 1f0:	11 97       	sbiw	r26, 0x01	; 1
 1f2:	f1 f7       	brne	.-4      	; 0x1f0 <main+0x16e>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <main+0x174>
 1f6:	00 00       	nop
 1f8:	01 97       	sbiw	r24, 0x01	; 1
PORTD=0b11111100;
for(i=0;i<1;i++)
 {for(j=0;j<1;j++)
   {for(k=3;k>=0;k--)
      {for(l=9;l>=1;l--) 
        {for(m=0;m<6;m++)
 1fa:	b9 f6       	brne	.-82     	; 0x1aa <main+0x128>
 1fc:	32 97       	sbiw	r30, 0x02	; 2
_delay_ms(1000);
PORTD=0b11111100;
for(i=0;i<1;i++)
 {for(j=0;j<1;j++)
   {for(k=3;k>=0;k--)
      {for(l=9;l>=1;l--) 
 1fe:	4e 17       	cp	r20, r30
 200:	5f 07       	cpc	r21, r31
 202:	11 f0       	breq	.+4      	; 0x208 <main+0x186>
#include<avr/io.h>
#include<util/delay.h>
void main()
{
 204:	cb 01       	movw	r24, r22
 206:	d1 cf       	rjmp	.-94     	; 0x1aa <main+0x128>
_delay_ms(1000);
PORTD=0b11111100;
for(i=0;i<1;i++)
 {for(j=0;j<1;j++)
   {for(k=3;k>=0;k--)
      {for(l=9;l>=1;l--) 
 208:	8d 89       	ldd	r24, Y+21	; 0x15
 20a:	9e 89       	ldd	r25, Y+22	; 0x16
 20c:	02 97       	sbiw	r24, 0x02	; 2
 20e:	9e 8b       	std	Y+22, r25	; 0x16
 210:	8d 8b       	std	Y+21, r24	; 0x15
PORTD=0b11111101;
_delay_ms(1000);
PORTD=0b11111100;
for(i=0;i<1;i++)
 {for(j=0;j<1;j++)
   {for(k=3;k>=0;k--)
 212:	28 17       	cp	r18, r24
 214:	39 07       	cpc	r19, r25
 216:	19 f0       	breq	.+6      	; 0x21e <main+0x19c>
#include<avr/io.h>
#include<util/delay.h>
void main()
{
 218:	ec 2d       	mov	r30, r12
 21a:	f9 2d       	mov	r31, r9
 21c:	f3 cf       	rjmp	.-26     	; 0x204 <main+0x182>
}
}
}
}

PORTD=0b11111101;
 21e:	82 ba       	out	0x12, r8	; 18
 220:	8f e3       	ldi	r24, 0x3F	; 63
 222:	9d e0       	ldi	r25, 0x0D	; 13
 224:	a3 e0       	ldi	r26, 0x03	; 3
 226:	81 50       	subi	r24, 0x01	; 1
 228:	90 40       	sbci	r25, 0x00	; 0
 22a:	a0 40       	sbci	r26, 0x00	; 0
 22c:	e1 f7       	brne	.-8      	; 0x226 <main+0x1a4>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <main+0x1ae>
 230:	00 00       	nop
_delay_ms(1000);
PORTD=0b11111100;
 232:	8c ef       	ldi	r24, 0xFC	; 252
 234:	82 bb       	out	0x12, r24	; 18

}
 236:	66 cf       	rjmp	.-308    	; 0x104 <main+0x82>

00000238 <_exit>:
 238:	f8 94       	cli

0000023a <__stop_program>:
 23a:	ff cf       	rjmp	.-2      	; 0x23a <__stop_program>
